-- Properties
go.property("move_speed", 100)
go.property("base_hp", 5)

-- Constants
local PLAYER_URL = msg.url("main:/player")
local PICKUP_FACTORY_URL = msg.url("main:/pickup_factory")

local function die(self)
	go.delete()
	for _, url in pairs(self.enemy_died_listener_URLs) do
		msg.post(url, "enemy_died", { enemy_id = go.get_id(), enemy_url = msg.url(), enemy_position = go.get_position() })
	end
end

function init(self)
	-- Tell the player this enemy exists.
	msg.post(PLAYER_URL, "enemy_spawned", { enemy_url = msg.url() })

	self.target_position = vmath.vector3()
	-- Set current HP to base HP
	self.hp = self.base_hp
	-- Correction vector for collision resolution.
	self.correction = vmath.vector3()
	-- The array of all listeners interested in knowing an enemy has died.
	self.enemy_died_listener_URLs = {}
	table.insert(self.enemy_died_listener_URLs, PLAYER_URL)
	table.insert(self.enemy_died_listener_URLs, PICKUP_FACTORY_URL)
end

function update(self, dt)
	local position = go.get_position()

	local dv = vmath.normalize(self.target_position - position)
	position = position + (dv * self.move_speed * dt)
	go.set_position(position)

	if self.hp <= 0 then
		die(self)
	end

	-- Reset correction vector
	self.correction = vmath.vector3()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("position_announced") then
		self.target_position = message.position
	elseif message_id == hash("attacked") then
		self.hp = self.hp - message.damage
	elseif message_id == hash("contact_point_response") then
		if message.distance > 0 then
			local projection = vmath.project(self.correction, message.normal * message.distance)
			if projection < 1 then
				local compensation = (message.distance - message.distance * projection) * message.normal
				go.set_position(go.get_position() + compensation)
				self.correction = self.correction + compensation
			end
		end
	elseif message_id == hash("trigger_response") then
		local other_group = message.other_group
		local other_id = message.other_id

		-- Damage player if enemy touches them.
		if other_group == hash("players") then
			msg.post(other_id, "touched_by_enemy")
		end
	end
end