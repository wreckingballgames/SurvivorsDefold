local function tick_game_time(self, dt)
	self.time_remaining = self.time_remaining - dt
	self.time_elapsed = self.time_elapsed + dt
end

local function update_timer_text(self)
	local timer_text_node = gui.get_node("timer_text")
	local timer_text_content = ""
	local minutes = math.floor(self.time_elapsed / 60)
	local seconds = math.floor(self.time_elapsed % 60)

	timer_text_content = minutes .. ":"

	if minutes < 10 then
		timer_text_content = "0" .. timer_text_content
	end

	if seconds < 10 then
		timer_text_content = timer_text_content .. "0" .. seconds
	else
		timer_text_content = timer_text_content .. seconds
	end
	gui.set_text(timer_text_node, timer_text_content)
end

function init(self)
	-- Initialize time remaining with a minute for the time limit to be set.
	self.time_remaining = 60
	-- Time elapsed in seconds.
	self.time_elapsed = 0
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	tick_game_time(self, dt)
	update_timer_text(self)

	if self.time_remaining <= 0 then

	end
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("time_limit_set") then
		-- Accept time limit in minutes and set time remaining in seconds.
		self.time_remaining = message.time_limit * 60
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
